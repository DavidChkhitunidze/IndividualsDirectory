// <auto-generated />
using System;
using IndividualsDirectory.Entities.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IndividualsDirectory.Entities.Context.Migrations
{
    [DbContext(typeof(IndividualsDirectoryDbContext))]
    [Migration("20191026095419_Initialize")]
    partial class Initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IndividualsDirectory.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("IndividualsDirectory.Entities.Individual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BirthDate")
                        .IsRequired();

                    b.Property<int?>("CityId");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Gender");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(250);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("PersonalNumber")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Individuals");
                });

            modelBuilder.Entity("IndividualsDirectory.Entities.PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IndividualId");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("PhoneNumberType");

                    b.HasKey("Id");

                    b.HasIndex("IndividualId");

                    b.ToTable("PhoneNumbers");
                });

            modelBuilder.Entity("IndividualsDirectory.Entities.RelatedIndividual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IndividualId");

                    b.Property<int>("RelatedIndividualType");

                    b.Property<int?>("RelatedToId");

                    b.HasKey("Id");

                    b.HasIndex("IndividualId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("RelatedIndividuals");
                });

            modelBuilder.Entity("IndividualsDirectory.Entities.Individual", b =>
                {
                    b.HasOne("IndividualsDirectory.Entities.City", "City")
                        .WithMany("Individuals")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("IndividualsDirectory.Entities.PhoneNumber", b =>
                {
                    b.HasOne("IndividualsDirectory.Entities.Individual", "Individual")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("IndividualId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IndividualsDirectory.Entities.RelatedIndividual", b =>
                {
                    b.HasOne("IndividualsDirectory.Entities.Individual", "Individual")
                        .WithMany("RelatedIndividuals")
                        .HasForeignKey("IndividualId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IndividualsDirectory.Entities.Individual", "RelatedTo")
                        .WithMany()
                        .HasForeignKey("RelatedToId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
