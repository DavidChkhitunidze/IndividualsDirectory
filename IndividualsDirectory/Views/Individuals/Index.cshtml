@using IndividualsDirectory.Models.ResourceControls;

@model Response<PagedList<GetIndividualPreviewViewModel>>

<p>
    <a asp-action="Create" class="btn btn-outline-secondary">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <a asp-action="Index" class="btn btn-outline-secondary">Back to Full List</a>
        </div>
        <input class="form-control" type="text" name="Search" placeholder="First Name | Last Name | Personal Number" value="@ViewData["Search"]">
        <div class="input-group-append">
            <button class="btn btn-outline-secondary" type="submit">Search</button>
        </div>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-bordered table-hover">
        <thead class="thead-light">
            <tr>
                <th scope="col">
                    Image
                </th>
                <th scope="col">
                    <a asp-action="Index" asp-route-orderby="@nameof(GetIndividualPreviewViewModel.FirstName)" asp-route-sort="@ViewData["Sort"]" asp-route-search="@ViewData["Search"]">First Name</a>
                </th>
                <th scope="col">
                    <a asp-action="Index" asp-route-orderby="@nameof(GetIndividualPreviewViewModel.LastName)" asp-route-sort="@ViewData["Sort"]" asp-route-search="@ViewData["Search"]">Last Name</a>
                </th>
                <th scope="col">
                    <a asp-action="Index" asp-route-orderby="@nameof(GetIndividualPreviewViewModel.Gender)" asp-route-sort="@ViewData["Sort"]" asp-route-search="@ViewData["Search"]">Gender</a>
                </th>
                <th scope="col">
                    <a asp-action="Index" asp-route-orderby="@nameof(GetIndividualPreviewViewModel.PersonalNumber)" asp-route-sort="@ViewData["Sort"]" asp-route-search="@ViewData["Search"]">Personal Number</a>
                </th>
                <th scope="col">
                    <a asp-action="Index" asp-route-orderby="@nameof(GetIndividualPreviewViewModel.BirthDate)" asp-route-sort="@ViewData["Sort"]" asp-route-search="@ViewData["Search"]">Birth Date</a>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (!Model.Success)
            {
                <tr style="text-align: center; vertical-align:middle">
                    <td colspan="7">
                        @string.Join("\r\n", Model.ErrorMessages)
                    </td>
                </tr>
            }
            else
            {
                @foreach (var item in Model.Model.Items)
                {
                    <tr>
                        <td class="avatar-image">
                            <img class="rounded-circle" src="@Url.Content($"/assets/img/{item.ImageUrl}")" alt="Avatar" width="31" height="31" />
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LastName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Gender)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PersonalNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BirthDate)
                        </td>
                        <td>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-secondary btn-sm">Details</a>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-secondary btn-sm">Edit</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-secondary btn-sm">Delete</a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
    @if (Model.Success)
    {
        <div style="float: left">
            @{
                var prevDisabled = !Model.Model.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.Model.HasNextPage ? "disabled" : "";
            }

            <a class="btn btn-outline-secondary @prevDisabled" asp-action="Index"
               asp-route-orderby="@ViewData["SortProperty"]"
               asp-route-sort="@ViewData["CurrentSort"]"
               asp-route-page="@(Model.Model.PreviousPageNumber)"
               asp-route-search="@ViewData["Search"]">
                Previous
            </a>
            <a class="btn btn-outline-secondary @nextDisabled" asp-action="Index"
               asp-route-orderby="@ViewData["SortProperty"]"
               asp-route-sort="@ViewData["CurrentSort"]"
               asp-route-page="@(Model.Model.NextPageNumber)"
               asp-route-search="@ViewData["Search"]">
                Next
            </a>
        </div>
        <div style="float: right">
            <p>Page @Model.Model.PageNumber of @Model.Model.TotalPages</p>
        </div>
    }
</div>

